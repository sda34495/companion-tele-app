// layout.tsx
'use client';
import { useEffect } from 'react';
import type { Metadata } from 'next';
import localFont from 'next/font/local';
import './globals.css';

// Importing local fonts
const geistSans = localFont({
  src: './fonts/GeistVF.woff',
  variable: '--font-geist-sans',
  weight: '100 900',
});
const geistMono = localFont({
  src: './fonts/GeistMonoVF.woff',
  variable: '--font-geist-mono',
  weight: '100 900',
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export default function RootLayout({ children }: { children: React.ReactNode }) {
  useEffect(() => {
    // Function to ensure document is scrollable
    function ensureDocumentIsScrollable() {
      const isScrollable = document.documentElement.scrollHeight > window.innerHeight;
      if (!isScrollable) {
        document.documentElement.style.setProperty('height', 'calc(100vh + 1px)', 'important');
      }
    }

    // Prevent window.scrollY from becoming 0 (important for touch scroll)
    function preventCollapse() {
      if (window.scrollY === 0) {
        window.scrollTo(0, 1); // Prevent scroll reset to 0
      }
    }

    const scrollableElement = document.documentElement;
    scrollableElement.addEventListener('touchstart', preventCollapse);
    window.addEventListener('load', ensureDocumentIsScrollable);

    // Cleanup event listeners on unmount
    return () => {
      scrollableElement.removeEventListener('touchstart', preventCollapse);
      window.removeEventListener('load', ensureDocumentIsScrollable);
    };
  }, []);

  return (
    <html lang="en">
      <head>
        {/* Add Telegram SDK script */}
        <script async src="https://telegram.org/js/telegram-web-app.js"></script>
      </head>

      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        {children}
      </body>
    </html>
  );
}
